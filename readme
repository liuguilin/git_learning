                    文件提交

输入 git init （如果为第一次，就输入该命令初始化目录，否则可直接跳过）

输入 git add 目录名称（添加需要提交的目录名称）

输入 git commit -m "备注说明"（提交至本地仓库，并简单说明）

输入 git remote add origin ssh://XXXXXXXXXXXXX.git (如果为第一次使用需要重定向提交的路径)

输入 git push -u origin master（提交至远程仓库）

输入 git pull --rebase origin master 命令将远程仓库的文件拉下来覆盖本地文件

输入 git push origin master -f 强行提交并覆盖远程仓库内文件



                修改commit记录

输入 git commit --amend 修改最近一次commit的提交记录

输入 git rebase -i commitId 变基修改commit记录


                    回滚
输入 git reset --hard HEAD^ 回滚上一次的commit版本，操作文件

输入 git reset –-soft HEAD~1 回退到某个版本，只回退了commit的信息，不操作文件

                    更新
                    
输入 git fetch --all && git reset --hard origin/master && git pull  强制远程覆盖本地代码


                修改密码
输入 git config --system --unset credential.helper 修改本地密码（此操作是克隆项目时账号密码错误使用，可以在克隆报错时自动提示键入密码）

输入 git config --global credential.helper store 保存git密码

            修改commit的邮箱和用户名
git filter-branch -f --env-filter '
OLD_EMAIL="jeryliu@tencent.com"
CORRECT_NAME="develop"
CORRECT_EMAIL="develop@qq.com"
if [ "$GIT_COMMITTER_EMAIL" = "$OLD_EMAIL" ]
then
    export GIT_COMMITTER_NAME="$CORRECT_NAME"
    export GIT_COMMITTER_EMAIL="$CORRECT_EMAIL"
fi
if [ "$GIT_AUTHOR_EMAIL" = "$OLD_EMAIL" ]
then
    export GIT_AUTHOR_NAME="$CORRECT_NAME"
    export GIT_AUTHOR_EMAIL="$CORRECT_EMAIL"
fi
' --tag-name-filter cat -- --branches --tags

RN 替换图标
yo rn-toolbox:assets --icon path/to/icon.png